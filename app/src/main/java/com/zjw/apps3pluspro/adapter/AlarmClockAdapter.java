package com.zjw.apps3pluspro.adapter;import android.annotation.SuppressLint;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.CompoundButton;import android.widget.TextView;import androidx.appcompat.widget.SwitchCompat;import com.zjw.apps3pluspro.R;import com.zjw.apps3pluspro.module.device.reminde.AlarmClockActivity;import com.zjw.apps3pluspro.module.device.reminde.RemindeUtils;import com.zjw.apps3pluspro.module.device.entity.AlarmClockModel;import com.zjw.apps3pluspro.utils.log.MyLog;import java.util.ArrayList;import java.util.List;/** * 闹钟列表适配器 */public class AlarmClockAdapter extends BaseAdapter {    private final String TAG = AlarmClockAdapter.class.getSimpleName();    static class ViewHolder {        public SwitchCompat sb_clcock;        public TextView tv_clock_time, tv_clock_monday, tv_clock_tuesday,                tv_clock_wednesday, tv_clock_thursday, tv_clock_friday,                tv_clock_saturday, tv_clock_sunday;    }    private List<AlarmClockModel> mAlarmClockModelList;    private LayoutInflater mInflator;    private AlarmClockActivity mContext;    public AlarmClockAdapter(AlarmClockActivity context) {        super();        this.mContext = context;        this.mInflator = LayoutInflater.from(context);        mAlarmClockModelList = new ArrayList<AlarmClockModel>();    }    public void addDevice(AlarmClockModel device) {        if (!mAlarmClockModelList.contains(device)) {            mAlarmClockModelList.add(device);        }    }    public AlarmClockModel getDevice(int position) {        return mAlarmClockModelList.get(position);    }    public void RemoveDevice(int position) {    }    public void setDeviceList(List<AlarmClockModel> healt_info_list) {        mAlarmClockModelList = healt_info_list;    }    public void RemoveAllDevice() {        mAlarmClockModelList.removeAll(mAlarmClockModelList);    }    public void clear() {        mAlarmClockModelList.clear();    }    @Override    public int getCount() {        return mAlarmClockModelList.size();    }    @Override    public Object getItem(int i) {        return mAlarmClockModelList.get(i);    }    @Override    public long getItemId(int i) {        return i;    }    @SuppressLint("ResourceAsColor")    @Override    public View getView(final int position, View view, ViewGroup viewGroup) {        final ViewHolder viewHolder;        // General ListView optimization code.        if (view == null) {            view = mInflator.inflate(R.layout.listitem_alarm_clock, null);            viewHolder = new ViewHolder();            viewHolder.sb_clcock = (SwitchCompat) view.findViewById(R.id.sb_clcock);            viewHolder.tv_clock_time = (TextView) view.findViewById(R.id.tv_clock_time);            viewHolder.tv_clock_monday = (TextView) view.findViewById(R.id.tv_clock_monday);            viewHolder.tv_clock_tuesday = (TextView) view.findViewById(R.id.tv_clock_tuesday);            viewHolder.tv_clock_wednesday = (TextView) view.findViewById(R.id.tv_clock_wednesday);            viewHolder.tv_clock_thursday = (TextView) view.findViewById(R.id.tv_clock_thursday);            viewHolder.tv_clock_friday = (TextView) view.findViewById(R.id.tv_clock_friday);            viewHolder.tv_clock_saturday = (TextView) view.findViewById(R.id.tv_clock_saturday);            viewHolder.tv_clock_sunday = (TextView) view.findViewById(R.id.tv_clock_sunday);            view.setTag(viewHolder);        } else {            viewHolder = (ViewHolder) view.getTag();        }        final AlarmClockModel myAlarmClockModel = mAlarmClockModelList.get(position);        MyLog.i(TAG, "适配器 myAlarmClockModel = " + myAlarmClockModel.toString());        //设置周几        viewHolder.tv_clock_monday.setVisibility(View.GONE);        viewHolder.tv_clock_tuesday.setVisibility(View.GONE);        viewHolder.tv_clock_wednesday.setVisibility(View.GONE);        viewHolder.tv_clock_thursday.setVisibility(View.GONE);        viewHolder.tv_clock_friday.setVisibility(View.GONE);        viewHolder.tv_clock_saturday.setVisibility(View.GONE);        viewHolder.tv_clock_sunday.setVisibility(View.GONE);        viewHolder.tv_clock_time.setText(myAlarmClockModel.getTimeAlarm());//        MyLog.i(TAG, "getView" + "====" + listItem.get(position).weekDay);        if (myAlarmClockModel.weekDay.charAt(0) == '1') {            viewHolder.tv_clock_monday.setVisibility(View.GONE);            viewHolder.tv_clock_tuesday.setVisibility(View.GONE);            viewHolder.tv_clock_wednesday.setVisibility(View.GONE);            viewHolder.tv_clock_thursday.setVisibility(View.GONE);            viewHolder.tv_clock_friday.setVisibility(View.GONE);            viewHolder.tv_clock_saturday.setVisibility(View.GONE);            viewHolder.tv_clock_sunday.setVisibility(View.GONE);        } else {            if (myAlarmClockModel.weekDay.charAt(1) == '1') {                viewHolder.tv_clock_monday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_monday.setVisibility(View.GONE);            }            if (myAlarmClockModel.weekDay.charAt(2) == '1') {                viewHolder.tv_clock_tuesday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_tuesday.setVisibility(View.GONE);            }            if (myAlarmClockModel.weekDay.charAt(3) == '1') {                viewHolder.tv_clock_wednesday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_wednesday.setVisibility(View.GONE);            }            if (myAlarmClockModel.weekDay.charAt(4) == '1') {                viewHolder.tv_clock_thursday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_thursday.setVisibility(View.GONE);            }            if (myAlarmClockModel.weekDay.charAt(5) == '1') {                viewHolder.tv_clock_friday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_friday.setVisibility(View.GONE);            }            if (myAlarmClockModel.weekDay.charAt(6) == '1') {                viewHolder.tv_clock_saturday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_saturday.setVisibility(View.GONE);            }            if (myAlarmClockModel.weekDay.charAt(7) == '1') {                viewHolder.tv_clock_sunday.setVisibility(View.VISIBLE);            } else {                viewHolder.tv_clock_sunday.setVisibility(View.GONE);            }        }        if (((myAlarmClockModel.getRepeat()) & 0x80) != 0) {            viewHolder.sb_clcock.setChecked(true);            updateUI(viewHolder, true);        } else {            viewHolder.sb_clcock.setChecked(false);            updateUI(viewHolder, false);        }        viewHolder.sb_clcock.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {            @Override            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {                MyLog.i(TAG, "适配器 isChecked = " + isChecked);                if (isChecked) {                    myAlarmClockModel.setRepeat((myAlarmClockModel.getRepeat()) | 0x80);                } else {                    myAlarmClockModel.setRepeat((myAlarmClockModel.getRepeat()) & ~0x80);                }                updateUI(viewHolder, isChecked);                RemindeUtils.updateClockAlarmClock(mContext, myAlarmClockModel);                mContext.saveAlarmClockSettoBle();            }        });        return view;    }    final void updateUI(ViewHolder viewHolder, boolean is_open) {        if (is_open) {            viewHolder.tv_clock_time.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_monday.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_tuesday.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_wednesday.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_thursday.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_friday.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_saturday.setTextColor(mContext.getResources().getColor(R.color.white));            viewHolder.tv_clock_sunday.setTextColor(mContext.getResources().getColor(R.color.white));        } else {            viewHolder.tv_clock_time.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_monday.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_tuesday.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_wednesday.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_thursday.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_friday.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_saturday.setTextColor(mContext.getResources().getColor(R.color.white_50));            viewHolder.tv_clock_sunday.setTextColor(mContext.getResources().getColor(R.color.white_50));        }    }}